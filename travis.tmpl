# -*- yaml -*-

language: go

env:
  global:
    # Package setup (Ref: http://pkg-go.alioth.debian.org/packaging.html)
    - VERSION="${TRAVIS_TAG:=0.0~git$(date +%Y%m%d)-1}"
    - PKG_NAME="{{.Wireframe.Proj}}"
    - PKG_URL="https://github.com/{{if .Wireframe.Vendor}}{{.Wireframe.Vendor}}{{else}}{{.Wireframe.User}}{{end}}/{{.Wireframe.Proj}}"
    - PKG_CAT=utils
    - PKG_ARCH=amd64
    - PKG_DESC="{{.Wireframe.Desc}}"
    - PKG_VEND="{{if .Wireframe.Vendor}}{{.Wireframe.Vendor}}{{else}}{{.Wireframe.User}}{{end}}"
    - PKG_MAINT='{{ENV "PKG_MAINT"}}'
    - PKG_LICNS="{{.Wireframe.License}}"
    # Build time setup
    - TZ=America/Toronto
    - DATE_BUILD=`date -I`

script:

  - date
  - echo $DATE_BUILD $VERSION
  - echo

  - go get -t -v ./...
  - go build -v -ldflags="-X main.date=$DATE_BUILD"
  - {{.Wireframe.Proj}}
  - go test -v ./...

  - go get github.com/mitchellh/gox
  - gox -ldflags="-X main.date=$DATE_BUILD" -osarch="linux/386 linux/amd64 darwin/amd64 windows/amd64" -output="out/{{"{{.Dir}}-{{.OS}}-{{.Arch}}"}}"
# linux/386 linux/amd64 linux/arm darwin/amd64 darwin/386 windows/amd64 windows/386
# e.g.: out/{{.Wireframe.Proj}}-linux-amd64

  # Create Debian Package
  - mkdir -p build
  - cp -v out/${PKG_NAME}-linux-amd64 build/${PKG_NAME}
  - gem install fpm --no-document
  - mkdir -p pkg
  - >-
    fpm --verbose -s dir -t deb
    --name ${PKG_NAME}
    --package pkg/${PKG_NAME}.deb
    --force
    --deb-compression bzip2
    --url "${PKG_URL}"
    --category ${PKG_CAT}
    --description "${PKG_DESC}"
    --maintainer "${PKG_MAINT}"
    --vendor "${PKG_VEND}"
    --license "${PKG_LICNS}"
    --version ${VERSION}
    --architecture ${PKG_ARCH}
    --depends apt
    --deb-compression gz
    ./build/=/usr/bin/
  # --deb-compression gz: https://unix.stackexchange.com/questions/441032/
  - ar t pkg/${PKG_NAME}.deb

  - sed -i -e "s/\$VERSION/$VERSION/" bintray-bin.json bintray-pkg.json
  - sed -i -e "s/\$DATE/$DATE_BUILD/" bintray-bin.json bintray-pkg.json

deploy:
  - provider: bintray
    user: {{ENV "BINTRAY_USER"}}
    key: ${BINTRAY_API_KEY}
    file: bintray-bin.json
    skip_cleanup: true

  - provider: bintray
    user: {{ENV "BINTRAY_USER"}}
    key: $BINTRAY_API_KEY
    file: bintray-pkg.json
    skip_cleanup: true
    on:
#      tags: true
